<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="plus.knowing.dao.SysUserDAO">
    <resultMap id="BaseResultMap" type="plus.knowing.entity.SysUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="wx_id" jdbcType="VARCHAR" property="wxId"/>
        <result column="wx_union_id" jdbcType="VARCHAR" property="wxUnionId"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, mobile, email, `name`, wx_id, wx_union_id, `role`, code, create_time, `password`
    </sql>
    <select id="selectByExample" parameterType="plus.knowing.entity.SysUserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="plus.knowing.entity.SysUserExample">
        delete from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="plus.knowing.entity.SysUser"
            useGeneratedKeys="true">
        insert into sys_user (mobile, email, `name`,
        wx_id, wx_union_id, `role`,
        code, create_time, `password`
        )
        values (#{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{wxId,jdbcType=VARCHAR}, #{wxUnionId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR},
        #{code,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{password,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="plus.knowing.entity.SysUser"
            useGeneratedKeys="true">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="mobile != null">
                mobile,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="wxId != null">
                wx_id,
            </if>
            <if test="wxUnionId != null">
                wx_union_id,
            </if>
            <if test="role != null">
                `role`,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="password != null">
                `password`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="wxId != null">
                #{wxId,jdbcType=VARCHAR},
            </if>
            <if test="wxUnionId != null">
                #{wxUnionId,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="plus.knowing.entity.SysUserExample" resultType="java.lang.Long">
        select count(*) from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.mobile != null">
                mobile = #{record.mobile,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.wxId != null">
                wx_id = #{record.wxId,jdbcType=VARCHAR},
            </if>
            <if test="record.wxUnionId != null">
                wx_union_id = #{record.wxUnionId,jdbcType=VARCHAR},
            </if>
            <if test="record.role != null">
                `role` = #{record.role,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.password != null">
                `password` = #{record.password,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_user
        set id = #{record.id,jdbcType=BIGINT},
        mobile = #{record.mobile,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        `name` = #{record.name,jdbcType=VARCHAR},
        wx_id = #{record.wxId,jdbcType=VARCHAR},
        wx_union_id = #{record.wxUnionId,jdbcType=VARCHAR},
        `role` = #{record.role,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        `password` = #{record.password,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="plus.knowing.entity.SysUser">
        update sys_user
        <set>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="wxId != null">
                wx_id = #{wxId,jdbcType=VARCHAR},
            </if>
            <if test="wxUnionId != null">
                wx_union_id = #{wxUnionId,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                `role` = #{role,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="plus.knowing.entity.SysUser">
        update sys_user
        set mobile = #{mobile,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        `name` = #{name,jdbcType=VARCHAR},
        wx_id = #{wxId,jdbcType=VARCHAR},
        wx_union_id = #{wxUnionId,jdbcType=VARCHAR},
        `role` = #{role,jdbcType=VARCHAR},
        code = #{code,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        `password` = #{password,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
